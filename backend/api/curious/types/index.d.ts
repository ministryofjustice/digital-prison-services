/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/sequation-virtual-campus2-api/ping': {
    get: operations['getHealthUsingGET']
  }
  '/sequation-virtual-campus2-api/latestLearnerAssessments/{prn}': {
    get: operations['getLearnerLatestAssessmentsUsingGET']
  }
  '/sequation-virtual-campus2-api/learnerProfile/{prn}': {
    get: operations['getLearnerEducationUsingGET']
  }
  '/sequation-virtual-campus2-api/learnerEducation/{prn}': {
    get: operations['getLearnerEducationUsingGET_1']
  }
  '/sequation-virtual-campus2-api/learnerEmployabilitySkills/{prn}': {
    get: operations['getEmployabilitySkillsUsingGET']
  }
  '/sequation-virtual-campus2-api/learnerGoals/{prn}': {
    get: operations['getLearnerGoalsUsingGET']
  }
  '/sequation-virtual-campus2-api/learnerNeurodivergence/{prn}': {
    get: operations['getLearnerNeurodivergenceUsingGET']
  }
}

export interface components {
  schemas: {
    AssessmentDTO: {
      /** The date the assessment has been taken */
      assessmentDate?: string
      /** Assessment Grade */
      qualificationGrade?: string
      /** Assessment Type */
      qualificationType?: enums.AssessmentQualificationType
    }
    EmployabilitySkillsReviewDTO: {
      /** Any comments on the review */
      comment?: string
      /** Employability Skill progression status and score on a scale of 1 to 5 (1 - Not demonstrated, 5 - Outstanding demonstration) */
      currentProgression?: string
      /** Date when the employability skill was reviewed */
      reviewDate?: string
    }
    LearnerAssessmentDTO: {
      /** Establishment (prison) identifier */
      establishmentId?: string
      /** Establishment (prison) name */
      establishmentName?: string
      qualification?: components['schemas']['AssessmentDTO']
    }
    LearnerEducationDTO: {
      /** Course Indicator from LRS */
      a2LevelIndicator?: boolean
      /** Course Indicator from LRS */
      accessHEIndicator?: boolean
      /** Actual Guided Learning Hours allocated to course */
      actualGLH?: number
      /** The sequence number of Course for a learner */
      aimSequenceNumber?: number
      alevelIndicator?: boolean
      /** Course Indicator from LRS */
      asLevelIndicator?: boolean
      /** Actual attended Guided Learning Hours by learner on course */
      attendedGLH?: number
      /** Course completion Status */
      completionStatus?: string
      /** Unique Course Code */
      courseCode?: string
      /** Course Name */
      courseName?: string
      /** Post code of a location where this course is getting delivered */
      deliveryLocationPostCode?: string
      /** Course Delivery Method */
      deliveryMethodType?: enums.LearnerEducationDeliveryMethodType
      /** Employment Outcome gained status associated with the course (with training, without training) */
      employmentOutcome?: string
      /** Establishment (prison) identifier */
      establishmentId?: string
      /** Establishment (prison) name */
      establishmentName?: string
      /** Course Indicator from LRS */
      functionalSkillsIndicator?: boolean
      /** Funding adjustment hours from prior learning */
      fundingAdjustmentPriorLearning?: number
      /** Funding Model for a Course */
      fundingModel?: string
      /** Funding type for a course */
      fundingType?: string
      /** Course Indicator from LRS */
      gceIndicator?: boolean
      /** Course Indicator from LRS */
      gcsIndicator?: boolean
      /** Indicates if the course is accredited */
      isAccredited?: boolean
      /** Course Indicator from LRS */
      keySkillsIndicator?: boolean
      /** Learners aim on Course */
      learnersAimType?: string
      /** Actual Course end date */
      learningActualEndDate?: string
      /** Planned Course end date */
      learningPlannedEndDate?: string
      /** Course start date */
      learningStartDate?: string
      /** Number of Guided Learning hours from LRS */
      lrsGLH?: number
      /** Course Indicator from LRS */
      miNotionalNVQLevelV2?: string
      /** Course Indicator from LRS */
      occupationalIndicator?: boolean
      /** Outcome of Course */
      outcome?: string
      /** Outcome grade of Course */
      outcomeGrade?: string
      /** Withdrawal reason if the learner withdraws from course */
      prisonWithdrawalReason?: string
      /** NOMIS Assigned Offender Number (Prisoner Identifier) */
      prn?: string
      /** Course Indicator from LRS */
      qcfCertificateIndicator?: boolean
      /** Course Indicator from LRS */
      qcfDiplomaIndicator?: boolean
      /** Course Indicator from LRS */
      qcfIndicator?: boolean
      /** Course Indicator from LRS */
      sectorSubjectAreaTier1?: string
      /** Course Indicator from LRS */
      sectorSubjectAreaTier2?: string
      /** Course Indicator from LRS */
      subcontractedPartnershipUKPRN?: number
      /** Course Indicator from LRS */
      unitType?: string
      /** Indicates if withdrawal is agreed or not */
      withdrawalReasonAgreed?: boolean
      /** Withdrawal reason (defaulted to Other) populated for the courses which are withdrawn */
      withdrawalReasons?: string
    }
    LearnerEmployabilitySkillsDTO: {
      /** Activity End Date */
      activityEndDate?: string
      /** Activity Location */
      activityLocation?: string
      /** Activity Start Date */
      activityStartDate?: string
      /** Prison Post code of a location where this skill is under taken */
      deliveryLocationPostCode?: string
      /** Skill Delivery Method */
      deliveryMethodType?: enums.DeliveryMethodType
      /** Employability Skill */
      employabilitySkill?: enums.EmployabilitySkill
      /** Establishment (prison) identifier */
      establishmentId?: string
      /** Establishment (prison) name */
      establishmentName?: string
      /** NOMIS Assigned Offender Number (Prisoner Identifier) */
      prn?: string
      reviews?: components['schemas']['EmployabilitySkillsReviewDTO'][]
    }
    LearnerGoalsDTO: {
      employmentGoals?: string[]
      longTermGoals?: string[]
      personalGoals?: string[]
      prn?: string
      shortTermGoals?: string[]
    }
    LearnerLatestAssessmentDTO: {
      /** NOMIS Assigned Offender Number (Prisoner Identifier) */
      prn?: string
      qualifications?: components['schemas']['LearnerAssessmentDTO'][]
    }
    LearnerProfileDTO: {
      /** Additional LDD and Health Problems */
      additionalLDDAndHealthProblems?: string[]
      /** Establishment (prison) identifier */
      establishmentId?: string
      /** Establishment (prison) name */
      establishmentName?: string
      /** In-Depth Assessment Date */
      inDepthAssessmentDate?: string
      /** Language Status */
      languageStatus?: string
      /** Learner Self Assessment LDD and Health Problem */
      lddHealthProblem?: string
      /** Planned Learning Hours */
      plannedHours?: number
      /** Primary LDD and Health Problem */
      primaryLDDAndHealthProblem?: string
      /** Overall attainment level of learners that have achieved various combinations of qualifications */
      priorAttainment?: string
      /** NOMIS Assigned Offender Number (Prisoner Identifier) */
      prn?: string
      qualifications?: components['schemas']['AssessmentDTO'][]
      /** Rapid Assessment Date */
      rapidAssessmentDate?: string
      /** Unique Learner Number */
      uln?: string
    }
    LearnerNeurodivergenceDTO: {
      /** NOMIS Assigned Offender Number (Prisoner Identifier) */
      prn?: string
      /** Establishment (prison) identifier */
      establishmentId?: string
      /** Establishment (prison) Name */
      establishmentName?: string
      /** Learner Neurodivergence Self-Declared */
      neurodivergenceSelfDeclared?: string[]
      /** Self-Declared Date */
      selfDeclaredDate?: string
      /** Learner Neurodivergence Assessed */
      neurodivergenceAssessed?: string[]
      /** Assessment Date */
      assessmentDate?: string
      /** Learner Neurodivergence Support */
      neurodivergenceSupport?: string[]
      /** Support Date */
      supportDate?: string
    }
    Pageable: {
      offset?: number
      pageNumber?: number
      pageSize?: number
      paged?: boolean
      sort?: components['schemas']['Sort']
      unpaged?: boolean
    }
    PageLearnerEducationDTO: {
      content?: components['schemas']['LearnerEducationDTO'][]
      empty?: boolean
      first?: boolean
      last?: boolean
      number?: number
      numberOfElements?: number
      pageable?: components['schemas']['Pageable']
      size?: number
      sort?: components['schemas']['Sort']
      totalElements?: number
      totalPages?: number
    }
    PageLearnerEmployabilitySkillsDTO: {
      content?: components['schemas']['LearnerEmployabilitySkillsDTO'][]
      empty?: boolean
      first?: boolean
      last?: boolean
      number?: number
      numberOfElements?: number
      pageable?: components['schemas']['Pageable']
      size?: number
      sort?: components['schemas']['Sort']
      totalElements?: number
      totalPages?: number
    }
    Sort: {
      empty?: boolean
      sorted?: boolean
      unsorted?: boolean
    }
  }
}

export interface operations {
  getHealthUsingGET: {
    responses: {
      /** Success */
      200: {
        content: {
          '*/*': string
        }
      }
      /** Invalid token */
      401: unknown
      /** Access denied */
      403: unknown
      /** Not Found */
      404: unknown
    }
  }
  getLearnerLatestAssessmentsUsingGET: {
    parameters: {
      path: {
        /** NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
      query: {
        /** The establishment the learner is or was resident in */
        establishmentId?: string
      }
    }
    responses: {
      /** Success */
      200: {
        content: {
          'application/json': components['schemas']['LearnerLatestAssessmentDTO'][]
        }
      }
      /** Authentication required */
      401: unknown
      /** Access denied */
      403: unknown
      /** Resource not found */
      404: unknown
    }
  }
  getLearnerEducationUsingGET: {
    parameters: {
      path: {
        /** NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
      query: {
        /** The establishment the learner is or was resident in */
        establishmentId?: string
      }
    }
    responses: {
      /** Success */
      200: {
        content: {
          'application/json': components['schemas']['LearnerProfileDTO'][]
        }
      }
      /** Authentication required */
      401: unknown
      /** Access denied */
      403: unknown
      /** Resource not found */
      404: unknown
    }
  }
  getLearnerEducationUsingGET1: {
    parameters: {
      query: {
        /** Actual guided learning hours allocated to course */
        actualGLH?: number
        /** Course Code */
        courseCode?: string
        /** Course Name */
        courseName?: string
        /** The establishment the learner is or was resident in. */
        establishmentId?: string
        /** Accredited or not */
        isAccredited?: unknown
        /** Whether the education is current or not */
        isCurrent?: boolean
        /** Planned Course End Date */
        learningPlannedEndDate?: string
        /** Course Start Date */
        learningStartDate?: string
        /** The page to be returned */
        page?: number
        /** Number of items to be returned. */
        size?: number
        /** Parameter on which the records are to be sorted */
        sort?: string[]
      }
      path: {
        /** NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
    }
    responses: {
      /** Success */
      200: {
        content: {
          'application/json': components['schemas']['PageLearnerEducationDTO']
        }
      }
      /** Authentication required */
      401: unknown
      /** Access denied */
      403: unknown
      /** Resource not found */
      404: unknown
    }
  }
  getEmployabilitySkillsUsingGET: {
    parameters: {
      query: {
        /** Employability Skill */
        employabilitySkill?: string
        /** The establishment the learner is or was resident in. */
        establishmentId?: string
        /** The page to be returned */
        page?: number
        /** Number of items to be returned. */
        size?: number
        /** Parameter on which the records are to be sorted */
        sort?: string[]
      }
      path: {
        /** NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
    }
    responses: {
      /** Success */
      200: {
        content: {
          'application/json': components['schemas']['PageLearnerEmployabilitySkillsDTO']
        }
      }
      /** Authentication required */
      401: unknown
      /** Access denied */
      403: unknown
      /** Resource not found */
      404: unknown
    }
  }
  getLearnerGoalsUsingGET: {
    parameters: {
      path: {
        /** NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
    }
    responses: {
      /** Success */
      200: {
        content: {
          'application/json': components['schemas']['LearnerGoalsDTO']
        }
      }
      /** Invalid token */
      401: unknown
      /** Access denied */
      403: unknown
      /** Resource not found */
      404: unknown
    }
  }
  getLearnerNeurodivergenceUsingGET: {
    parameters: {
      path: {
        /** NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
      query: {
        /** The establishment the learner is or was resident in */
        establishmentId?: string
      }
    }
    responses: {
      /** Success */
      200: {
        content: {
          'application/json': components['schemas']['LearnerNeurodivergenceDTO'][]
        }
      }
      /** Authentication required */
      401: unknown
      /** Access denied */
      403: unknown
      /** Resource not found */
      404: unknown
    }
  }
}
