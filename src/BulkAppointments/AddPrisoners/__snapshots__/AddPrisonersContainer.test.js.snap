// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add prisoners container should pass props correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddPrisonerContainer
    agencyId="LEI"
    appointmentDetails={
      Object {
        "appointmentType": "ACC",
        "appointmentTypeDescription": "Activities",
        "comments": "test comment",
        "counts": "2",
        "locationDescription": "Gym",
        "locationId": 1,
        "recurring": true,
        "repeats": "DAILY",
        "startTime": "2019-10-10T:21:00:00Z",
        "times": "1",
      }
    }
    dispatchAppointmentPrisoners={[Function]}
    dispatchBulkAppointmentsComplete={[Function]}
    handleError={[Function]}
    history={
      Object {
        "push": [MockFunction],
        "replace": [MockFunction],
      }
    }
    notmEndpointUrl="/"
    now={"2019-10-10T21:00:00.000Z"}
    prisoners={Array []}
    raiseAnalyticsEvent={[Function]}
    resetErrorDispatch={[Function]}
    setLoadedDispatch={[Function]}
    store={
      Object {
        "dispatch": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "loaded": true,
                "type": "SET_LOADED",
              },
            ],
            Array [
              Object {
                "type": "RESET_ERROR",
              },
            ],
          ],
        },
        "getState": [MockFunction] {
          "calls": Array [
            Array [],
            Array [],
          ],
        },
        "subscribe": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
          ],
        },
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "loaded": true,
                  "type": "SET_LOADED",
                },
              ],
              Array [
                Object {
                  "type": "RESET_ERROR",
                },
              ],
            ],
          },
          "getState": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
            ],
          },
          "subscribe": [MockFunction] {
            "calls": Array [
              Array [
                [Function],
              ],
            ],
          },
        },
        "unsubscribe": undefined,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "alwaysRender": true,
      "children": Array [
        false,
        <UNDEFINED>
          <p>
             Upload the prison numbers for all prisoners attending the below appointment. 
          </p>
          <UNDEFINED>
            <UNDEFINED />
            <AppointmentDetails
              appointmentType="ACC"
              appointmentTypeDescription="Activities"
              comments="test comment"
              counts="2"
              endTime=""
              locationDescription="Gym"
              locationId={1}
              recurring={true}
              repeats="DAILY"
              startTime="2019-10-10T:21:00:00Z"
              times="1"
            />
            <UNDEFINED />
            <OffenderUpload
              agencyId="LEI"
              onCancel={[Function]}
              onError={[Function]}
              onSuccess={[Function]}
              showCancelButton={true}
            />
            <UNDEFINED />
            <AddPrisoners
              appointment={
                Object {
                  "appointmentType": "ACC",
                  "appointmentTypeDescription": "Activities",
                  "comments": "test comment",
                  "counts": "2",
                  "locationDescription": "Gym",
                  "locationId": 1,
                  "recurring": true,
                  "repeats": "DAILY",
                  "startTime": "2019-10-10T:21:00:00Z",
                  "times": "1",
                }
              }
              date={null}
              dispatchAppointmentPrisoners={[Function]}
              error=""
              now={"2019-10-10T21:00:00.000Z"}
              offenders={Array []}
              onCancel={[Function]}
              onError={[Function]}
              onSuccess={[Function]}
              resetErrors={[Function]}
              startTime="2019-10-10T:21:00:00Z"
            />
          </UNDEFINED>
        </UNDEFINED>,
      ],
      "title": "Add prisoners",
    },
    "ref": null,
    "rendered": Array [
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <p>
               Upload the prison numbers for all prisoners attending the below appointment. 
            </p>,
            <UNDEFINED>
              <UNDEFINED />
              <AppointmentDetails
                appointmentType="ACC"
                appointmentTypeDescription="Activities"
                comments="test comment"
                counts="2"
                endTime=""
                locationDescription="Gym"
                locationId={1}
                recurring={true}
                repeats="DAILY"
                startTime="2019-10-10T:21:00:00Z"
                times="1"
              />
              <UNDEFINED />
              <OffenderUpload
                agencyId="LEI"
                onCancel={[Function]}
                onError={[Function]}
                onSuccess={[Function]}
                showCancelButton={true}
              />
              <UNDEFINED />
              <AddPrisoners
                appointment={
                  Object {
                    "appointmentType": "ACC",
                    "appointmentTypeDescription": "Activities",
                    "comments": "test comment",
                    "counts": "2",
                    "locationDescription": "Gym",
                    "locationId": 1,
                    "recurring": true,
                    "repeats": "DAILY",
                    "startTime": "2019-10-10T:21:00:00Z",
                    "times": "1",
                  }
                }
                date={null}
                dispatchAppointmentPrisoners={[Function]}
                error=""
                now={"2019-10-10T21:00:00.000Z"}
                offenders={Array []}
                onCancel={[Function]}
                onError={[Function]}
                onSuccess={[Function]}
                resetErrors={[Function]}
                startTime="2019-10-10T:21:00:00Z"
              />
            </UNDEFINED>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " Upload the prison numbers for all prisoners attending the below appointment. ",
            },
            "ref": null,
            "rendered": " Upload the prison numbers for all prisoners attending the below appointment. ",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <UNDEFINED />,
                <AppointmentDetails
                  appointmentType="ACC"
                  appointmentTypeDescription="Activities"
                  comments="test comment"
                  counts="2"
                  endTime=""
                  locationDescription="Gym"
                  locationId={1}
                  recurring={true}
                  repeats="DAILY"
                  startTime="2019-10-10T:21:00:00Z"
                  times="1"
                />,
                <UNDEFINED />,
                <OffenderUpload
                  agencyId="LEI"
                  onCancel={[Function]}
                  onError={[Function]}
                  onSuccess={[Function]}
                  showCancelButton={true}
                />,
                <UNDEFINED />,
                <AddPrisoners
                  appointment={
                    Object {
                      "appointmentType": "ACC",
                      "appointmentTypeDescription": "Activities",
                      "comments": "test comment",
                      "counts": "2",
                      "locationDescription": "Gym",
                      "locationId": 1,
                      "recurring": true,
                      "repeats": "DAILY",
                      "startTime": "2019-10-10T:21:00:00Z",
                      "times": "1",
                    }
                  }
                  date={null}
                  dispatchAppointmentPrisoners={[Function]}
                  error=""
                  now={"2019-10-10T21:00:00.000Z"}
                  offenders={Array []}
                  onCancel={[Function]}
                  onError={[Function]}
                  onSuccess={[Function]}
                  resetErrors={[Function]}
                  startTime="2019-10-10T:21:00:00Z"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-iwsKbI",
                    "isStatic": true,
                    "rules": Array [
                      "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                      "30px",
                      ";
  margin-top: ",
                      "10px",
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-iwsKbI",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appointmentType": "ACC",
                  "appointmentTypeDescription": "Activities",
                  "comments": "test comment",
                  "counts": "2",
                  "endTime": "",
                  "locationDescription": "Gym",
                  "locationId": 1,
                  "recurring": true,
                  "repeats": "DAILY",
                  "startTime": "2019-10-10T:21:00:00Z",
                  "times": "1",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-iwsKbI",
                    "isStatic": true,
                    "rules": Array [
                      "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                      "30px",
                      ";
  margin-top: ",
                      "10px",
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-iwsKbI",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "agencyId": "LEI",
                  "onCancel": [Function],
                  "onError": [Function],
                  "onSuccess": [Function],
                  "showCancelButton": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-iwsKbI",
                    "isStatic": true,
                    "rules": Array [
                      "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                      "30px",
                      ";
  margin-top: ",
                      "10px",
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-iwsKbI",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appointment": Object {
                    "appointmentType": "ACC",
                    "appointmentTypeDescription": "Activities",
                    "comments": "test comment",
                    "counts": "2",
                    "locationDescription": "Gym",
                    "locationId": 1,
                    "recurring": true,
                    "repeats": "DAILY",
                    "startTime": "2019-10-10T:21:00:00Z",
                    "times": "1",
                  },
                  "date": null,
                  "dispatchAppointmentPrisoners": [Function],
                  "error": "",
                  "now": "2019-10-10T21:00:00.000Z",
                  "offenders": Array [],
                  "onCancel": [Function],
                  "onError": [Function],
                  "onSuccess": [Function],
                  "resetErrors": [Function],
                  "startTime": "2019-10-10T:21:00:00Z",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-dnqmqq",
                "isStatic": true,
                "rules": Array [
                  "
  margin-top: ",
                  "30px",
                  ";

  button {
    margin-top: ",
                  "30px",
                  ";
  }
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-dnqmqq",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Symbol(react.fragment),
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "alwaysRender": true,
        "children": Array [
          false,
          <UNDEFINED>
            <p>
               Upload the prison numbers for all prisoners attending the below appointment. 
            </p>
            <UNDEFINED>
              <UNDEFINED />
              <AppointmentDetails
                appointmentType="ACC"
                appointmentTypeDescription="Activities"
                comments="test comment"
                counts="2"
                endTime=""
                locationDescription="Gym"
                locationId={1}
                recurring={true}
                repeats="DAILY"
                startTime="2019-10-10T:21:00:00Z"
                times="1"
              />
              <UNDEFINED />
              <OffenderUpload
                agencyId="LEI"
                onCancel={[Function]}
                onError={[Function]}
                onSuccess={[Function]}
                showCancelButton={true}
              />
              <UNDEFINED />
              <AddPrisoners
                appointment={
                  Object {
                    "appointmentType": "ACC",
                    "appointmentTypeDescription": "Activities",
                    "comments": "test comment",
                    "counts": "2",
                    "locationDescription": "Gym",
                    "locationId": 1,
                    "recurring": true,
                    "repeats": "DAILY",
                    "startTime": "2019-10-10T:21:00:00Z",
                    "times": "1",
                  }
                }
                date={null}
                dispatchAppointmentPrisoners={[Function]}
                error=""
                now={"2019-10-10T21:00:00.000Z"}
                offenders={Array []}
                onCancel={[Function]}
                onError={[Function]}
                onSuccess={[Function]}
                resetErrors={[Function]}
                startTime="2019-10-10T:21:00:00Z"
              />
            </UNDEFINED>
          </UNDEFINED>,
        ],
        "title": "Add prisoners",
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <p>
                 Upload the prison numbers for all prisoners attending the below appointment. 
              </p>,
              <UNDEFINED>
                <UNDEFINED />
                <AppointmentDetails
                  appointmentType="ACC"
                  appointmentTypeDescription="Activities"
                  comments="test comment"
                  counts="2"
                  endTime=""
                  locationDescription="Gym"
                  locationId={1}
                  recurring={true}
                  repeats="DAILY"
                  startTime="2019-10-10T:21:00:00Z"
                  times="1"
                />
                <UNDEFINED />
                <OffenderUpload
                  agencyId="LEI"
                  onCancel={[Function]}
                  onError={[Function]}
                  onSuccess={[Function]}
                  showCancelButton={true}
                />
                <UNDEFINED />
                <AddPrisoners
                  appointment={
                    Object {
                      "appointmentType": "ACC",
                      "appointmentTypeDescription": "Activities",
                      "comments": "test comment",
                      "counts": "2",
                      "locationDescription": "Gym",
                      "locationId": 1,
                      "recurring": true,
                      "repeats": "DAILY",
                      "startTime": "2019-10-10T:21:00:00Z",
                      "times": "1",
                    }
                  }
                  date={null}
                  dispatchAppointmentPrisoners={[Function]}
                  error=""
                  now={"2019-10-10T21:00:00.000Z"}
                  offenders={Array []}
                  onCancel={[Function]}
                  onError={[Function]}
                  onSuccess={[Function]}
                  resetErrors={[Function]}
                  startTime="2019-10-10T:21:00:00Z"
                />
              </UNDEFINED>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " Upload the prison numbers for all prisoners attending the below appointment. ",
              },
              "ref": null,
              "rendered": " Upload the prison numbers for all prisoners attending the below appointment. ",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <UNDEFINED />,
                  <AppointmentDetails
                    appointmentType="ACC"
                    appointmentTypeDescription="Activities"
                    comments="test comment"
                    counts="2"
                    endTime=""
                    locationDescription="Gym"
                    locationId={1}
                    recurring={true}
                    repeats="DAILY"
                    startTime="2019-10-10T:21:00:00Z"
                    times="1"
                  />,
                  <UNDEFINED />,
                  <OffenderUpload
                    agencyId="LEI"
                    onCancel={[Function]}
                    onError={[Function]}
                    onSuccess={[Function]}
                    showCancelButton={true}
                  />,
                  <UNDEFINED />,
                  <AddPrisoners
                    appointment={
                      Object {
                        "appointmentType": "ACC",
                        "appointmentTypeDescription": "Activities",
                        "comments": "test comment",
                        "counts": "2",
                        "locationDescription": "Gym",
                        "locationId": 1,
                        "recurring": true,
                        "repeats": "DAILY",
                        "startTime": "2019-10-10T:21:00:00Z",
                        "times": "1",
                      }
                    }
                    date={null}
                    dispatchAppointmentPrisoners={[Function]}
                    error=""
                    now={"2019-10-10T21:00:00.000Z"}
                    offenders={Array []}
                    onCancel={[Function]}
                    onError={[Function]}
                    onSuccess={[Function]}
                    resetErrors={[Function]}
                    startTime="2019-10-10T:21:00:00Z"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-iwsKbI",
                      "isStatic": true,
                      "rules": Array [
                        "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                        "30px",
                        ";
  margin-top: ",
                        "10px",
                        ";
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-iwsKbI",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appointmentType": "ACC",
                    "appointmentTypeDescription": "Activities",
                    "comments": "test comment",
                    "counts": "2",
                    "endTime": "",
                    "locationDescription": "Gym",
                    "locationId": 1,
                    "recurring": true,
                    "repeats": "DAILY",
                    "startTime": "2019-10-10T:21:00:00Z",
                    "times": "1",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-iwsKbI",
                      "isStatic": true,
                      "rules": Array [
                        "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                        "30px",
                        ";
  margin-top: ",
                        "10px",
                        ";
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-iwsKbI",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "agencyId": "LEI",
                    "onCancel": [Function],
                    "onError": [Function],
                    "onSuccess": [Function],
                    "showCancelButton": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-iwsKbI",
                      "isStatic": true,
                      "rules": Array [
                        "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                        "30px",
                        ";
  margin-top: ",
                        "10px",
                        ";
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-iwsKbI",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appointment": Object {
                      "appointmentType": "ACC",
                      "appointmentTypeDescription": "Activities",
                      "comments": "test comment",
                      "counts": "2",
                      "locationDescription": "Gym",
                      "locationId": 1,
                      "recurring": true,
                      "repeats": "DAILY",
                      "startTime": "2019-10-10T:21:00:00Z",
                      "times": "1",
                    },
                    "date": null,
                    "dispatchAppointmentPrisoners": [Function],
                    "error": "",
                    "now": "2019-10-10T21:00:00.000Z",
                    "offenders": Array [],
                    "onCancel": [Function],
                    "onError": [Function],
                    "onSuccess": [Function],
                    "resetErrors": [Function],
                    "startTime": "2019-10-10T:21:00:00Z",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dnqmqq",
                  "isStatic": true,
                  "rules": Array [
                    "
  margin-top: ",
                    "30px",
                    ";

  button {
    margin-top: ",
                    "30px",
                    ";
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-dnqmqq",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Symbol(react.fragment),
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Add prisoners container should render completed view 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddPrisonerContainer
    agencyId="LEI"
    appointmentDetails={
      Object {
        "appointmentType": "ACC",
        "appointmentTypeDescription": "Activities",
        "comments": "test comment",
        "counts": "2",
        "locationDescription": "Gym",
        "locationId": 1,
        "recurring": false,
        "repeats": "DAILY",
        "startTime": "2019-10-10T:21:00:00Z",
        "times": "1",
      }
    }
    dispatchAppointmentPrisoners={[Function]}
    dispatchBulkAppointmentsComplete={[Function]}
    handleError={[Function]}
    history={
      Object {
        "push": [MockFunction],
        "replace": [MockFunction],
      }
    }
    notmEndpointUrl="/"
    now={"2019-10-10T21:00:00.000Z"}
    prisoners={Array []}
    raiseAnalyticsEvent={[Function]}
    resetErrorDispatch={[Function]}
    setLoadedDispatch={[Function]}
    store={
      Object {
        "dispatch": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "loaded": true,
                "type": "SET_LOADED",
              },
            ],
            Array [
              Object {
                "type": "RESET_ERROR",
              },
            ],
            Array [
              Object {
                "type": "SET_BULK_APPOINTMENTS_COMPLETE",
              },
            ],
          ],
        },
        "getState": [MockFunction] {
          "calls": Array [
            Array [],
            Array [],
          ],
        },
        "subscribe": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
          ],
        },
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "loaded": true,
                  "type": "SET_LOADED",
                },
              ],
              Array [
                Object {
                  "type": "RESET_ERROR",
                },
              ],
              Array [
                Object {
                  "type": "SET_BULK_APPOINTMENTS_COMPLETE",
                },
              ],
            ],
          },
          "getState": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
            ],
          },
          "subscribe": [MockFunction] {
            "calls": Array [
              Array [
                [Function],
              ],
            ],
          },
        },
        "unsubscribe": undefined,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "alwaysRender": true,
      "children": Array [
        <withRouter(ScrollToTop)
          always={true}
        >
          <H3>
             
            2
             appointments created 
          </H3>
          <UNDEFINED />
          <AppointmentDetails
            appointmentType="ACC"
            appointmentTypeDescription="Activities"
            comments="test comment"
            counts="2"
            endTime=""
            locationDescription="Gym"
            locationId={1}
            recurring={false}
            repeats="DAILY"
            startTime="2019-10-10T:21:00:00Z"
            times="1"
          />
          <UNDEFINED />
          <UNDEFINED>
            <UNDEFINED
              buttonColour={undefined}
              buttonHoverColour={undefined}
              buttonShadowColour={undefined}
              buttonTextColour={undefined}
              disabled={false}
              icon={undefined}
              onClick={[Function]}
              start={false}
            >
              Add another appointment
            </UNDEFINED>
            <UNDEFINED
              buttonColour="#dee0e2"
              buttonHoverColour={undefined}
              buttonShadowColour={undefined}
              buttonTextColour="#0b0c0c"
              disabled={false}
              icon={undefined}
              onClick={[Function]}
              start={false}
            >
              Back to home page
            </UNDEFINED>
          </UNDEFINED>
        </withRouter(ScrollToTop)>,
        false,
      ],
      "title": "Add prisoners",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "always": true,
          "children": Array [
            <H3>
               
              2
               appointments created 
            </H3>,
            <UNDEFINED />,
            <AppointmentDetails
              appointmentType="ACC"
              appointmentTypeDescription="Activities"
              comments="test comment"
              counts="2"
              endTime=""
              locationDescription="Gym"
              locationId={1}
              recurring={false}
              repeats="DAILY"
              startTime="2019-10-10T:21:00:00Z"
              times="1"
            />,
            <UNDEFINED />,
            <UNDEFINED>
              <UNDEFINED
                buttonColour={undefined}
                buttonHoverColour={undefined}
                buttonShadowColour={undefined}
                buttonTextColour={undefined}
                disabled={false}
                icon={undefined}
                onClick={[Function]}
                start={false}
              >
                Add another appointment
              </UNDEFINED>
              <UNDEFINED
                buttonColour="#dee0e2"
                buttonHoverColour={undefined}
                buttonShadowColour={undefined}
                buttonTextColour="#0b0c0c"
                disabled={false}
                icon={undefined}
                onClick={[Function]}
                start={false}
              >
                Back to home page
              </UNDEFINED>
            </UNDEFINED>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                " ",
                2,
                " appointments created ",
              ],
            },
            "ref": null,
            "rendered": Array [
              " ",
              2,
              " appointments created ",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-iwsKbI",
                "isStatic": true,
                "rules": Array [
                  "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                  "30px",
                  ";
  margin-top: ",
                  "10px",
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-iwsKbI",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "appointmentType": "ACC",
              "appointmentTypeDescription": "Activities",
              "comments": "test comment",
              "counts": "2",
              "endTime": "",
              "locationDescription": "Gym",
              "locationId": 1,
              "recurring": false,
              "repeats": "DAILY",
              "startTime": "2019-10-10T:21:00:00Z",
              "times": "1",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-iwsKbI",
                "isStatic": true,
                "rules": Array [
                  "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                  "30px",
                  ";
  margin-top: ",
                  "10px",
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-iwsKbI",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <UNDEFINED
                  buttonColour={undefined}
                  buttonHoverColour={undefined}
                  buttonShadowColour={undefined}
                  buttonTextColour={undefined}
                  disabled={false}
                  icon={undefined}
                  onClick={[Function]}
                  start={false}
                >
                  Add another appointment
                </UNDEFINED>,
                <UNDEFINED
                  buttonColour="#dee0e2"
                  buttonHoverColour={undefined}
                  buttonShadowColour={undefined}
                  buttonTextColour="#0b0c0c"
                  disabled={false}
                  icon={undefined}
                  onClick={[Function]}
                  start={false}
                >
                  Back to home page
                </UNDEFINED>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "buttonColour": undefined,
                  "buttonHoverColour": undefined,
                  "buttonShadowColour": undefined,
                  "buttonTextColour": undefined,
                  "children": "Add another appointment",
                  "disabled": false,
                  "icon": undefined,
                  "onClick": [Function],
                  "start": false,
                },
                "ref": null,
                "rendered": "Add another appointment",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "buttonColour": undefined,
                    "buttonHoverColour": undefined,
                    "buttonShadowColour": undefined,
                    "buttonTextColour": undefined,
                    "disabled": false,
                    "icon": undefined,
                    "start": false,
                  },
                  "propTypes": Object {
                    "buttonColour": [Function],
                    "buttonHoverColour": [Function],
                    "buttonShadowColour": [Function],
                    "buttonTextColour": [Function],
                    "children": [Function],
                    "disabled": [Function],
                    "icon": [Function],
                    "start": [Function],
                  },
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "buttonColour": "#dee0e2",
                  "buttonHoverColour": undefined,
                  "buttonShadowColour": undefined,
                  "buttonTextColour": "#0b0c0c",
                  "children": "Back to home page",
                  "disabled": false,
                  "icon": undefined,
                  "onClick": [Function],
                  "start": false,
                },
                "ref": null,
                "rendered": "Back to home page",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "buttonColour": undefined,
                    "buttonHoverColour": undefined,
                    "buttonShadowColour": undefined,
                    "buttonTextColour": undefined,
                    "disabled": false,
                    "icon": undefined,
                    "start": false,
                  },
                  "propTypes": Object {
                    "buttonColour": [Function],
                    "buttonHoverColour": [Function],
                    "buttonShadowColour": [Function],
                    "buttonTextColour": [Function],
                    "children": [Function],
                    "disabled": [Function],
                    "icon": [Function],
                    "start": [Function],
                  },
                  "render": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-gZMcBi",
                "isStatic": true,
                "rules": Array [
                  "
  display: flex;
  flex-direction: row;
  button {
    margin-right: ",
                  "10px",
                  ";
  }
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-gZMcBi",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "alwaysRender": true,
        "children": Array [
          <withRouter(ScrollToTop)
            always={true}
          >
            <H3>
               
              2
               appointments created 
            </H3>
            <UNDEFINED />
            <AppointmentDetails
              appointmentType="ACC"
              appointmentTypeDescription="Activities"
              comments="test comment"
              counts="2"
              endTime=""
              locationDescription="Gym"
              locationId={1}
              recurring={false}
              repeats="DAILY"
              startTime="2019-10-10T:21:00:00Z"
              times="1"
            />
            <UNDEFINED />
            <UNDEFINED>
              <UNDEFINED
                buttonColour={undefined}
                buttonHoverColour={undefined}
                buttonShadowColour={undefined}
                buttonTextColour={undefined}
                disabled={false}
                icon={undefined}
                onClick={[Function]}
                start={false}
              >
                Add another appointment
              </UNDEFINED>
              <UNDEFINED
                buttonColour="#dee0e2"
                buttonHoverColour={undefined}
                buttonShadowColour={undefined}
                buttonTextColour="#0b0c0c"
                disabled={false}
                icon={undefined}
                onClick={[Function]}
                start={false}
              >
                Back to home page
              </UNDEFINED>
            </UNDEFINED>
          </withRouter(ScrollToTop)>,
          false,
        ],
        "title": "Add prisoners",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "always": true,
            "children": Array [
              <H3>
                 
                2
                 appointments created 
              </H3>,
              <UNDEFINED />,
              <AppointmentDetails
                appointmentType="ACC"
                appointmentTypeDescription="Activities"
                comments="test comment"
                counts="2"
                endTime=""
                locationDescription="Gym"
                locationId={1}
                recurring={false}
                repeats="DAILY"
                startTime="2019-10-10T:21:00:00Z"
                times="1"
              />,
              <UNDEFINED />,
              <UNDEFINED>
                <UNDEFINED
                  buttonColour={undefined}
                  buttonHoverColour={undefined}
                  buttonShadowColour={undefined}
                  buttonTextColour={undefined}
                  disabled={false}
                  icon={undefined}
                  onClick={[Function]}
                  start={false}
                >
                  Add another appointment
                </UNDEFINED>
                <UNDEFINED
                  buttonColour="#dee0e2"
                  buttonHoverColour={undefined}
                  buttonShadowColour={undefined}
                  buttonTextColour="#0b0c0c"
                  disabled={false}
                  icon={undefined}
                  onClick={[Function]}
                  start={false}
                >
                  Back to home page
                </UNDEFINED>
              </UNDEFINED>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  " ",
                  2,
                  " appointments created ",
                ],
              },
              "ref": null,
              "rendered": Array [
                " ",
                2,
                " appointments created ",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-iwsKbI",
                  "isStatic": true,
                  "rules": Array [
                    "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                    "30px",
                    ";
  margin-top: ",
                    "10px",
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-iwsKbI",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "appointmentType": "ACC",
                "appointmentTypeDescription": "Activities",
                "comments": "test comment",
                "counts": "2",
                "endTime": "",
                "locationDescription": "Gym",
                "locationId": 1,
                "recurring": false,
                "repeats": "DAILY",
                "startTime": "2019-10-10T:21:00:00Z",
                "times": "1",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-iwsKbI",
                  "isStatic": true,
                  "rules": Array [
                    "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                    "30px",
                    ";
  margin-top: ",
                    "10px",
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-iwsKbI",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <UNDEFINED
                    buttonColour={undefined}
                    buttonHoverColour={undefined}
                    buttonShadowColour={undefined}
                    buttonTextColour={undefined}
                    disabled={false}
                    icon={undefined}
                    onClick={[Function]}
                    start={false}
                  >
                    Add another appointment
                  </UNDEFINED>,
                  <UNDEFINED
                    buttonColour="#dee0e2"
                    buttonHoverColour={undefined}
                    buttonShadowColour={undefined}
                    buttonTextColour="#0b0c0c"
                    disabled={false}
                    icon={undefined}
                    onClick={[Function]}
                    start={false}
                  >
                    Back to home page
                  </UNDEFINED>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "buttonColour": undefined,
                    "buttonHoverColour": undefined,
                    "buttonShadowColour": undefined,
                    "buttonTextColour": undefined,
                    "children": "Add another appointment",
                    "disabled": false,
                    "icon": undefined,
                    "onClick": [Function],
                    "start": false,
                  },
                  "ref": null,
                  "rendered": "Add another appointment",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "buttonColour": undefined,
                      "buttonHoverColour": undefined,
                      "buttonShadowColour": undefined,
                      "buttonTextColour": undefined,
                      "disabled": false,
                      "icon": undefined,
                      "start": false,
                    },
                    "propTypes": Object {
                      "buttonColour": [Function],
                      "buttonHoverColour": [Function],
                      "buttonShadowColour": [Function],
                      "buttonTextColour": [Function],
                      "children": [Function],
                      "disabled": [Function],
                      "icon": [Function],
                      "start": [Function],
                    },
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "buttonColour": "#dee0e2",
                    "buttonHoverColour": undefined,
                    "buttonShadowColour": undefined,
                    "buttonTextColour": "#0b0c0c",
                    "children": "Back to home page",
                    "disabled": false,
                    "icon": undefined,
                    "onClick": [Function],
                    "start": false,
                  },
                  "ref": null,
                  "rendered": "Back to home page",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "buttonColour": undefined,
                      "buttonHoverColour": undefined,
                      "buttonShadowColour": undefined,
                      "buttonTextColour": undefined,
                      "disabled": false,
                      "icon": undefined,
                      "start": false,
                    },
                    "propTypes": Object {
                      "buttonColour": [Function],
                      "buttonHoverColour": [Function],
                      "buttonShadowColour": [Function],
                      "buttonTextColour": [Function],
                      "children": [Function],
                      "disabled": [Function],
                      "icon": [Function],
                      "start": [Function],
                    },
                    "render": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gZMcBi",
                  "isStatic": true,
                  "rules": Array [
                    "
  display: flex;
  flex-direction: row;
  button {
    margin-right: ",
                    "10px",
                    ";
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gZMcBi",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Add prisoners container should render completed view for recurring 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddPrisonerContainer
    agencyId="LEI"
    appointmentDetails={
      Object {
        "appointmentType": "ACC",
        "appointmentTypeDescription": "Activities",
        "comments": "test comment",
        "counts": "2",
        "locationDescription": "Gym",
        "locationId": 1,
        "recurring": true,
        "repeats": "DAILY",
        "startTime": "2019-10-10T:21:00:00Z",
        "times": "1",
      }
    }
    dispatchAppointmentPrisoners={[Function]}
    dispatchBulkAppointmentsComplete={[Function]}
    handleError={[Function]}
    history={
      Object {
        "push": [MockFunction],
        "replace": [MockFunction],
      }
    }
    notmEndpointUrl="/"
    now={"2019-10-10T21:00:00.000Z"}
    prisoners={Array []}
    raiseAnalyticsEvent={[Function]}
    resetErrorDispatch={[Function]}
    setLoadedDispatch={[Function]}
    store={
      Object {
        "dispatch": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "loaded": true,
                "type": "SET_LOADED",
              },
            ],
            Array [
              Object {
                "type": "RESET_ERROR",
              },
            ],
            Array [
              Object {
                "type": "SET_BULK_APPOINTMENTS_COMPLETE",
              },
            ],
          ],
        },
        "getState": [MockFunction] {
          "calls": Array [
            Array [],
            Array [],
          ],
        },
        "subscribe": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
          ],
        },
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "loaded": true,
                  "type": "SET_LOADED",
                },
              ],
              Array [
                Object {
                  "type": "RESET_ERROR",
                },
              ],
              Array [
                Object {
                  "type": "SET_BULK_APPOINTMENTS_COMPLETE",
                },
              ],
            ],
          },
          "getState": [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
            ],
          },
          "subscribe": [MockFunction] {
            "calls": Array [
              Array [
                [Function],
              ],
            ],
          },
        },
        "unsubscribe": undefined,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "alwaysRender": true,
      "children": Array [
        <withRouter(ScrollToTop)
          always={true}
        >
          <H3>
             Appointments created 
          </H3>
          <UNDEFINED />
          <AppointmentDetails
            appointmentType="ACC"
            appointmentTypeDescription="Activities"
            comments="test comment"
            counts="2"
            endTime=""
            locationDescription="Gym"
            locationId={1}
            recurring={true}
            repeats="DAILY"
            startTime="2019-10-10T:21:00:00Z"
            times="1"
          />
          <UNDEFINED />
          <UNDEFINED>
            <UNDEFINED
              buttonColour={undefined}
              buttonHoverColour={undefined}
              buttonShadowColour={undefined}
              buttonTextColour={undefined}
              disabled={false}
              icon={undefined}
              onClick={[Function]}
              start={false}
            >
              Add another appointment
            </UNDEFINED>
            <UNDEFINED
              buttonColour="#dee0e2"
              buttonHoverColour={undefined}
              buttonShadowColour={undefined}
              buttonTextColour="#0b0c0c"
              disabled={false}
              icon={undefined}
              onClick={[Function]}
              start={false}
            >
              Back to home page
            </UNDEFINED>
          </UNDEFINED>
        </withRouter(ScrollToTop)>,
        false,
      ],
      "title": "Add prisoners",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "always": true,
          "children": Array [
            <H3>
               Appointments created 
            </H3>,
            <UNDEFINED />,
            <AppointmentDetails
              appointmentType="ACC"
              appointmentTypeDescription="Activities"
              comments="test comment"
              counts="2"
              endTime=""
              locationDescription="Gym"
              locationId={1}
              recurring={true}
              repeats="DAILY"
              startTime="2019-10-10T:21:00:00Z"
              times="1"
            />,
            <UNDEFINED />,
            <UNDEFINED>
              <UNDEFINED
                buttonColour={undefined}
                buttonHoverColour={undefined}
                buttonShadowColour={undefined}
                buttonTextColour={undefined}
                disabled={false}
                icon={undefined}
                onClick={[Function]}
                start={false}
              >
                Add another appointment
              </UNDEFINED>
              <UNDEFINED
                buttonColour="#dee0e2"
                buttonHoverColour={undefined}
                buttonShadowColour={undefined}
                buttonTextColour="#0b0c0c"
                disabled={false}
                icon={undefined}
                onClick={[Function]}
                start={false}
              >
                Back to home page
              </UNDEFINED>
            </UNDEFINED>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": " Appointments created ",
            },
            "ref": null,
            "rendered": " Appointments created ",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-iwsKbI",
                "isStatic": true,
                "rules": Array [
                  "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                  "30px",
                  ";
  margin-top: ",
                  "10px",
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-iwsKbI",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "appointmentType": "ACC",
              "appointmentTypeDescription": "Activities",
              "comments": "test comment",
              "counts": "2",
              "endTime": "",
              "locationDescription": "Gym",
              "locationId": 1,
              "recurring": true,
              "repeats": "DAILY",
              "startTime": "2019-10-10T:21:00:00Z",
              "times": "1",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-iwsKbI",
                "isStatic": true,
                "rules": Array [
                  "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                  "30px",
                  ";
  margin-top: ",
                  "10px",
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-iwsKbI",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <UNDEFINED
                  buttonColour={undefined}
                  buttonHoverColour={undefined}
                  buttonShadowColour={undefined}
                  buttonTextColour={undefined}
                  disabled={false}
                  icon={undefined}
                  onClick={[Function]}
                  start={false}
                >
                  Add another appointment
                </UNDEFINED>,
                <UNDEFINED
                  buttonColour="#dee0e2"
                  buttonHoverColour={undefined}
                  buttonShadowColour={undefined}
                  buttonTextColour="#0b0c0c"
                  disabled={false}
                  icon={undefined}
                  onClick={[Function]}
                  start={false}
                >
                  Back to home page
                </UNDEFINED>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "buttonColour": undefined,
                  "buttonHoverColour": undefined,
                  "buttonShadowColour": undefined,
                  "buttonTextColour": undefined,
                  "children": "Add another appointment",
                  "disabled": false,
                  "icon": undefined,
                  "onClick": [Function],
                  "start": false,
                },
                "ref": null,
                "rendered": "Add another appointment",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "buttonColour": undefined,
                    "buttonHoverColour": undefined,
                    "buttonShadowColour": undefined,
                    "buttonTextColour": undefined,
                    "disabled": false,
                    "icon": undefined,
                    "start": false,
                  },
                  "propTypes": Object {
                    "buttonColour": [Function],
                    "buttonHoverColour": [Function],
                    "buttonShadowColour": [Function],
                    "buttonTextColour": [Function],
                    "children": [Function],
                    "disabled": [Function],
                    "icon": [Function],
                    "start": [Function],
                  },
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "buttonColour": "#dee0e2",
                  "buttonHoverColour": undefined,
                  "buttonShadowColour": undefined,
                  "buttonTextColour": "#0b0c0c",
                  "children": "Back to home page",
                  "disabled": false,
                  "icon": undefined,
                  "onClick": [Function],
                  "start": false,
                },
                "ref": null,
                "rendered": "Back to home page",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": Object {
                    "buttonColour": undefined,
                    "buttonHoverColour": undefined,
                    "buttonShadowColour": undefined,
                    "buttonTextColour": undefined,
                    "disabled": false,
                    "icon": undefined,
                    "start": false,
                  },
                  "propTypes": Object {
                    "buttonColour": [Function],
                    "buttonHoverColour": [Function],
                    "buttonShadowColour": [Function],
                    "buttonTextColour": [Function],
                    "children": [Function],
                    "disabled": [Function],
                    "icon": [Function],
                    "start": [Function],
                  },
                  "render": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-gZMcBi",
                "isStatic": true,
                "rules": Array [
                  "
  display: flex;
  flex-direction: row;
  button {
    margin-right: ",
                  "10px",
                  ";
  }
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-gZMcBi",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "alwaysRender": true,
        "children": Array [
          <withRouter(ScrollToTop)
            always={true}
          >
            <H3>
               Appointments created 
            </H3>
            <UNDEFINED />
            <AppointmentDetails
              appointmentType="ACC"
              appointmentTypeDescription="Activities"
              comments="test comment"
              counts="2"
              endTime=""
              locationDescription="Gym"
              locationId={1}
              recurring={true}
              repeats="DAILY"
              startTime="2019-10-10T:21:00:00Z"
              times="1"
            />
            <UNDEFINED />
            <UNDEFINED>
              <UNDEFINED
                buttonColour={undefined}
                buttonHoverColour={undefined}
                buttonShadowColour={undefined}
                buttonTextColour={undefined}
                disabled={false}
                icon={undefined}
                onClick={[Function]}
                start={false}
              >
                Add another appointment
              </UNDEFINED>
              <UNDEFINED
                buttonColour="#dee0e2"
                buttonHoverColour={undefined}
                buttonShadowColour={undefined}
                buttonTextColour="#0b0c0c"
                disabled={false}
                icon={undefined}
                onClick={[Function]}
                start={false}
              >
                Back to home page
              </UNDEFINED>
            </UNDEFINED>
          </withRouter(ScrollToTop)>,
          false,
        ],
        "title": "Add prisoners",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "always": true,
            "children": Array [
              <H3>
                 Appointments created 
              </H3>,
              <UNDEFINED />,
              <AppointmentDetails
                appointmentType="ACC"
                appointmentTypeDescription="Activities"
                comments="test comment"
                counts="2"
                endTime=""
                locationDescription="Gym"
                locationId={1}
                recurring={true}
                repeats="DAILY"
                startTime="2019-10-10T:21:00:00Z"
                times="1"
              />,
              <UNDEFINED />,
              <UNDEFINED>
                <UNDEFINED
                  buttonColour={undefined}
                  buttonHoverColour={undefined}
                  buttonShadowColour={undefined}
                  buttonTextColour={undefined}
                  disabled={false}
                  icon={undefined}
                  onClick={[Function]}
                  start={false}
                >
                  Add another appointment
                </UNDEFINED>
                <UNDEFINED
                  buttonColour="#dee0e2"
                  buttonHoverColour={undefined}
                  buttonShadowColour={undefined}
                  buttonTextColour="#0b0c0c"
                  disabled={false}
                  icon={undefined}
                  onClick={[Function]}
                  start={false}
                >
                  Back to home page
                </UNDEFINED>
              </UNDEFINED>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": " Appointments created ",
              },
              "ref": null,
              "rendered": " Appointments created ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-iwsKbI",
                  "isStatic": true,
                  "rules": Array [
                    "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                    "30px",
                    ";
  margin-top: ",
                    "10px",
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-iwsKbI",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "appointmentType": "ACC",
                "appointmentTypeDescription": "Activities",
                "comments": "test comment",
                "counts": "2",
                "endTime": "",
                "locationDescription": "Gym",
                "locationId": 1,
                "recurring": true,
                "repeats": "DAILY",
                "startTime": "2019-10-10T:21:00:00Z",
                "times": "1",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-iwsKbI",
                  "isStatic": true,
                  "rules": Array [
                    "
  border: solid 1px #979797;
  width: 100%;
  margin-bottom: ",
                    "30px",
                    ";
  margin-top: ",
                    "10px",
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-iwsKbI",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <UNDEFINED
                    buttonColour={undefined}
                    buttonHoverColour={undefined}
                    buttonShadowColour={undefined}
                    buttonTextColour={undefined}
                    disabled={false}
                    icon={undefined}
                    onClick={[Function]}
                    start={false}
                  >
                    Add another appointment
                  </UNDEFINED>,
                  <UNDEFINED
                    buttonColour="#dee0e2"
                    buttonHoverColour={undefined}
                    buttonShadowColour={undefined}
                    buttonTextColour="#0b0c0c"
                    disabled={false}
                    icon={undefined}
                    onClick={[Function]}
                    start={false}
                  >
                    Back to home page
                  </UNDEFINED>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "buttonColour": undefined,
                    "buttonHoverColour": undefined,
                    "buttonShadowColour": undefined,
                    "buttonTextColour": undefined,
                    "children": "Add another appointment",
                    "disabled": false,
                    "icon": undefined,
                    "onClick": [Function],
                    "start": false,
                  },
                  "ref": null,
                  "rendered": "Add another appointment",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "buttonColour": undefined,
                      "buttonHoverColour": undefined,
                      "buttonShadowColour": undefined,
                      "buttonTextColour": undefined,
                      "disabled": false,
                      "icon": undefined,
                      "start": false,
                    },
                    "propTypes": Object {
                      "buttonColour": [Function],
                      "buttonHoverColour": [Function],
                      "buttonShadowColour": [Function],
                      "buttonTextColour": [Function],
                      "children": [Function],
                      "disabled": [Function],
                      "icon": [Function],
                      "start": [Function],
                    },
                    "render": [Function],
                  },
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "buttonColour": "#dee0e2",
                    "buttonHoverColour": undefined,
                    "buttonShadowColour": undefined,
                    "buttonTextColour": "#0b0c0c",
                    "children": "Back to home page",
                    "disabled": false,
                    "icon": undefined,
                    "onClick": [Function],
                    "start": false,
                  },
                  "ref": null,
                  "rendered": "Back to home page",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "buttonColour": undefined,
                      "buttonHoverColour": undefined,
                      "buttonShadowColour": undefined,
                      "buttonTextColour": undefined,
                      "disabled": false,
                      "icon": undefined,
                      "start": false,
                    },
                    "propTypes": Object {
                      "buttonColour": [Function],
                      "buttonHoverColour": [Function],
                      "buttonShadowColour": [Function],
                      "buttonTextColour": [Function],
                      "children": [Function],
                      "disabled": [Function],
                      "icon": [Function],
                      "start": [Function],
                    },
                    "render": [Function],
                  },
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gZMcBi",
                  "isStatic": true,
                  "rules": Array [
                    "
  display: flex;
  flex-direction: row;
  button {
    margin-right: ",
                    "10px",
                    ";
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gZMcBi",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
