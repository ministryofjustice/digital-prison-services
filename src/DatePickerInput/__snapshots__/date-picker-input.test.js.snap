// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Date picker input date picker input component should render correctly with default props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DatePickerInput
    additionalClassName=""
    error=""
    futureOnly={false}
    handleDateChange={[Function]}
    inputId="date"
    label="date"
    placeholder="select date"
    value="2018-10-10"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "handleDateChange": [Function],
      "inputId": "date",
      "inputProps": Object {
        "className": "datePickerInput form-control ",
        "error": "",
        "label": "date",
        "placeholder": "select date",
      },
      "name": "date",
      "shouldShowDay": [Function],
      "title": "Date",
      "value": "2018-10-10",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "handleDateChange": [Function],
        "inputId": "date",
        "inputProps": Object {
          "className": "datePickerInput form-control ",
          "error": "",
          "label": "date",
          "placeholder": "select date",
        },
        "name": "date",
        "shouldShowDay": [Function],
        "title": "Date",
        "value": "2018-10-10",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Date picker input date picker input component should render with error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DatePickerInput
    additionalClassName=""
    error="there was an error"
    futureOnly={false}
    handleDateChange={[Function]}
    inputId="date"
    label=""
    placeholder="Today"
    value=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "handleDateChange": [Function],
      "inputId": "date",
      "inputProps": Object {
        "className": "datePickerInput form-control ",
        "error": "there was an error",
        "label": "",
        "placeholder": "Today",
      },
      "name": "date",
      "shouldShowDay": [Function],
      "title": "Date",
      "value": "",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "handleDateChange": [Function],
        "inputId": "date",
        "inputProps": Object {
          "className": "datePickerInput form-control ",
          "error": "there was an error",
          "label": "",
          "placeholder": "Today",
        },
        "name": "date",
        "shouldShowDay": [Function],
        "title": "Date",
        "value": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
