{% extends "../partials/layout.njk" %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/textarea/macro.njk" import govukTextarea %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "components/datePicker/datePicker.njk" import datePicker %}
{% from "components/timePicker/timePicker.njk" import timePicker %}

{% set title = 'Add new appointment' %}
{% set offenderUrl = dpsUrl + 'offenders/' + offenderNo %}
{% set recurringHtml %}
  <div data-qa="recurring-inputs">
      {{ govukSelect({
          id: "repeats",
          name: "repeats",
          label: {
              text: "Repeats"
          },
          items: repeatTypes | addDefaultSelectedVale('Select') | setSelected(formValues.repeats),
          errorMessage: errors | findError('repeats')
      }) }}

      {{ govukInput({
          id: "times",
          name: "times",
          value: formValues.times,
          errorMessage: errors | findError('times'),
          type: "number",
          label: {
              text: "How many appointments do you want to add?"
          },
          classes: "govuk-input--width-3"
      }) }}

      {% if endOfPeriod %}
          <h4 class="govuk-heading-s">
              Ends on
          </h4>

          <p class="govuk-body ovuk-!-font-weight-bold">
              {{ endOfPeriod }}
          </p>
      {% endif -%}
  </div>
{% endset -%}

{% block beforeContent %}
  {{ govukBreadcrumbs({
      items: [
          {
              text: "Home",
              href: dpsUrl
          },
          {
              text: offenderName,
              href: offenderUrl
          },
          {
              text: title
          }
      ]
  }) }}
{% endblock %}

{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <h1 class="govuk-heading-l">
        <span class="govuk-caption-l">{{offenderName}} (<span id="offenderNo">{{offenderNo}}</span>)</span>
        {{title}}
      </h1>

      {% if errors.length > 0 %}
        {{ govukErrorSummary({
            titleText: "There is a problem",
            errorList: errors,
            attributes: { 'data-qa-errors': true }
        }) }}
      {% endif %}

      <form method="POST" novalidate="novalidate">
          <input type="hidden" name="bookingId" value={{bookingId}} />

          {{ govukSelect({
            id: "appointment-type",
            name: "appointmentType",
            label: {
                text: "Appointment type"
            },
            items: appointmentTypes | addDefaultSelectedVale('Select') | setSelected(formValues.appointmentType),
            errorMessage: errors | findError('appointment-type')
          }) }}

          {{ govukSelect({
              id: "location",
              name: "location",
              label: {
                  text: "Location"
              },
              items: appointmentLocations | addDefaultSelectedVale('Select') | setSelected(formValues.location),
              errorMessage: errors | findError('location')
          }) }}

          {{ datePicker({
              id: 'date',
              label: 'Date',
              name: 'date',
              date: formValues.date,
              errorMessage: errors | findError('date'),
              classes: 'js-appointment-date',
              attributes: {'data-disable-past-date':'true', 'data-add-appointment-date': 'true'}
          }) }}

          <div id="clashesContainer" style="display: none;"></div>

          {{ timePicker({
              id: 'start-time',
              label: 'Start time',
              name: 'startTime',
              hour: formValues.startTimeHours,
              minute: formValues.startTimeMinutes,
              errorMessage: errors | findError('start-time-hours')
          }) }}

          {{ timePicker({
              id: 'end-time',
              label: 'End time (optional)',
              name: 'endTime',
              hour: formValues.endTimeHours,
              minute: formValues.endTimeMinutes,
              errorMessage: errors | findError('end-time-hours')
          }) }}

          {{ govukRadios({
              classes: "govuk-radios--inline",
              idPrefix: "recurring",
              name: "recurring",
              errorMessage: errors | findError('recurring'),
              fieldset: {
                  legend: {
                      text: "Is this a recurring appointment?",
                      classes: "govuk-fieldset__legend--s"
                  }
              },
              items: [{
                  value: "yes",
                  text: "Yes",
                  checked: formValues.recurring == 'yes',
                  conditional: {
                      html: recurringHtml
                  }
              },
                  {
                      value: "no",
                      text: "No",
                      checked: formValues.recurring == 'no'
                  }
              ]
          }) }}

          {{ govukTextarea({
              name: "comments",
              id: "comments",
              value: formValues.comments,
              errorMessage: errors | findError('comments'),
              label: {
                  text: "Comments (optional)"
              }
          }) }}

          {{ govukButton({ text: "Add appointment", type: "submit" }) }}

          {{ govukButton({
              text: "Cancel",
              element: 'a',
              href: offenderUrl,
              classes: "govuk-button--secondary"
          }) }}
      </form>
    </div>
  </div>
{% endblock %}
